{"version":3,"sources":["components/TopMenu.tsx","components/ButtonMenu.tsx","components/Typing.tsx","components/TextSlider.tsx","components/CareerBlock.tsx","components/TagBox.tsx","components/ProjectBlock.tsx","components/Skills.tsx","components/Contact.tsx","assest/data/data.ts","assest/img/stary-sky.jpg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["style","css","TopMenu","useState","showDrop","setShowDrop","divRef","useRef","toggleScreen","screen","document","querySelector","body","removeChild","el","createElement","className","onclick","onClickIcon","appendChild","current","classList","toggle","pre","ref","onClick","documentElement","scrollTo","text","targ","size","color","ButtonMenu","offsetTop","Typing","arr","split","tidRef","useEffect","window","setInterval","remove","clearInterval","map","s","i","width","TextSlider","textList","now","txtBox","transform","length","txt","CareerBlock","href","target","TagBox","ProjectBlock","imgUrl","projectName","description","period","techList","link","site","onClickLink","e","url","currentTarget","dataset","name","open","src","t","Skills","Contact","textContent","data","projects","sky","App","id","p","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1e90427.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\n/** @jsxImportSource @emotion/react */\r\nimport {css} from '@emotion/react';\r\nimport {ButtonMenu} from './index';\r\nimport {AiOutlineHome, AiOutlineMenu, AiOutlineClose} from 'react-icons/ai';\r\n\r\nfunction TopMenu(){\r\n    const [showDrop, setShowDrop] = useState(false);\r\n    const divRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    const onClickHome = ()=>{\r\n        document.documentElement.scrollTo(0, 0);\r\n    }\r\n\r\n    const toggleScreen = ()=>{\r\n        const screen = document.querySelector('.screen');\r\n        if(screen){\r\n            document.body.removeChild(screen);\r\n        }else{\r\n            const el = document.createElement('div');\r\n            el.className = 'screen';\r\n            el.onclick = ()=> {\r\n                onClickIcon();\r\n            };\r\n            document.body.appendChild(el);\r\n        }\r\n    }\r\n\r\n    const toggleDrop = ()=>{\r\n        const menus = divRef.current!.querySelector('.menus')!;\r\n        menus.classList.toggle('drop');\r\n    }\r\n\r\n    const onClickIcon = ()=>{\r\n        toggleDrop();\r\n        toggleScreen();\r\n        setShowDrop((pre)=> !pre);\r\n    }\r\n\r\n    return (\r\n        <div css={style} ref={divRef}>\r\n            <div className='tit' onClick={onClickHome}><AiOutlineHome/>KKS</div>\r\n            <div className='menus'>\r\n                <ButtonMenu text='About' targ='About'/>\r\n                <ButtonMenu text='Projects' targ='Projects'/>\r\n                <ButtonMenu text='Contact' targ='Contact'/>\r\n            </div>\r\n            {showDrop ? \r\n                <AiOutlineClose className='icon' size='30' color='white' onClick={onClickIcon}/> :\r\n                <AiOutlineMenu className='icon' size='30' color='white' onClick={onClickIcon}/>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = css`\r\n    z-index: 101;\r\n    position: fixed;\r\n    top: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    height: 70px;\r\n    padding: 0 50px;\r\n    color: var(--color-main);\r\n    background-color: rgb(0, 0, 0, 0.7);\r\n    backdrop-filter: blur(7px);\r\n    .tit {\r\n        font-size: 30px;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n        svg {\r\n            margin-right: 10px;\r\n            transform: translateY(3px);\r\n        }\r\n    }\r\n    .menus {\r\n        display: flex;\r\n    }\r\n    .icon {\r\n        display: none;\r\n        cursor: pointer;\r\n        transition: .3s;\r\n        &:hover {\r\n            transform: scale(1.1);\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 900px){\r\n        .menus {\r\n            display: none;\r\n        }\r\n        .icon {\r\n            display: unset;\r\n        }\r\n        .drop {\r\n            position: fixed;\r\n            top: 70px;\r\n            right: 0;\r\n            display: flex !important;\r\n            flex-direction: column;\r\n            border-bottom-left-radius: 6px;\r\n            border-bottom-right-radius: 6px;\r\n            background-color: rgb(0, 0, 0, 0.7);\r\n            backdrop-filter: blur(7px);\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 420px){\r\n        padding: 0 10px;\r\n    }\r\n`;\r\n\r\nexport default TopMenu;","import React from 'react';\r\n/** @jsxImportSource @emotion/react */\r\nimport {css} from '@emotion/react';\r\n\r\ninterface Props {\r\n    text: string\r\n    targ: string\r\n}\r\n\r\nfunction ButtonMenu({text, targ}: Props){\r\n    const onClick = ()=>{\r\n        const el: HTMLDivElement | null = document.querySelector('#' + targ);\r\n        if(el){\r\n            const html = document.documentElement;\r\n            html.scrollTo(0, el.offsetTop - 70);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <a css={style} onClick={onClick}>\r\n            <div className='txt'>{text}</div>\r\n            <div className='bar'></div>\r\n        </a>\r\n    );\r\n}\r\n\r\nconst style = css`\r\n    width: fit-content;\r\n    box-sizing: content-box;\r\n    margin: 0 20px;\r\n    border-radius: var(--radius);\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    transition: 1s;\r\n    .txt {\r\n        text-align: center;\r\n        color: white;\r\n        font-size: 21px;\r\n        font-weight: bold;\r\n        padding: 3px 0;\r\n    }\r\n    .bar {\r\n        height: 5px;\r\n        width: 0px;\r\n        background-color: var(--color-main);\r\n        border-radius: var(--radius);\r\n        transition: .3s;\r\n    }\r\n    &:hover {\r\n        .bar {\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 900px){\r\n        .txt {\r\n            transition: .3s;\r\n            font-size: 18px;\r\n            padding: 0 20px 25px 20px;\r\n            &:hover {\r\n                color: var(--color-main);\r\n            }\r\n        }\r\n        .bar {\r\n            display: none;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default ButtonMenu;","import React, {useEffect, useRef} from 'react';\r\n/** @jsxImportSource @emotion/react */\r\nimport {css} from '@emotion/react';\r\n\r\ninterface Props {\r\n    text: string\r\n    size?: number\r\n}\r\n\r\nfunction Typing({text, size=45}: Props){\r\n    const arr = text.split('');\r\n    const divRef = useRef<HTMLDivElement | null>(null);\r\n    const tidRef = useRef(0);\r\n\r\n    useEffect(()=>{\r\n        tidRef.current = window.setInterval(()=>{\r\n            const el = divRef.current!.querySelector('.hide');\r\n            if(el) el.classList.remove('hide');\r\n            else clearInterval(tidRef.current);\r\n        }, 130);\r\n        return ()=> clearInterval(tidRef.current);\r\n    });\r\n\r\n    return (\r\n        <div css={style(size)}>\r\n            <div className='txt' ref={divRef}>\r\n                {arr.map((s, i)=> (\r\n                    <span key={i} className='hide'>{s}</span>\r\n                ))}\r\n            </div>\r\n            <div className='cursor'></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = (size: number)=> (css`\r\n    display: flex;\r\n    align-items: center;\r\n    .txt {\r\n        white-space: nowrap;\r\n        font-size:${size}px;\r\n        font-weight: bold;\r\n        color: var(--color-main);\r\n        .hide {\r\n            display: none;\r\n        }\r\n        .eli\r\n    }\r\n    .cursor {\r\n        width: 4px;\r\n        height: ${size}px;\r\n        margin-left: 5px;\r\n        transition: .3s;\r\n        background-color: white;\r\n        animation-name: blink;\r\n        animation-duration: 1.1s;\r\n        animation-timing-function: ease;\r\n        animation-iteration-count: infinite;\r\n    }\r\n    \r\n    @keyframes blink {\r\n        0% {opacity: 0;}\r\n        50% {opacity: 1;}\r\n        100% {opacity: 0;}\r\n    }\r\n\r\n    @media screen and (max-width: 710px){\r\n        .txt {\r\n          font-size: 35px;\r\n        }\r\n        .cursor {\r\n          height: 35px;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 420px){\r\n        .txt {\r\n          font-size: 25px;\r\n        }\r\n        .cursor {\r\n            height: 25px;\r\n        }\r\n    }\r\n`);\r\n\r\nexport default Typing;","import React, { useEffect, useRef } from 'react';\r\n/** @jsxImportSource @emotion/react */\r\nimport {css} from '@emotion/react';\r\n\r\ninterface Props {\r\n    textList: string[]\r\n    size?: number\r\n    width?: number\r\n}\r\n\r\ninterface cssProps {\r\n    size: number\r\n    width: number\r\n}\r\n\r\nfunction TextSlider({textList, size=20, width=350}: Props){\r\n    const now = useRef(0);\r\n    const tidRef = useRef(0);\r\n    const divRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    useEffect(()=>{\r\n        const txtBox: HTMLDivElement = divRef.current!.querySelector('.txt-box')!;\r\n        tidRef.current = window.setInterval(()=>{\r\n            txtBox.style.transform = `translateY(calc(100% * -${now.current}))`;\r\n            now.current = now.current < textList.length-1 ? now.current + 1 : 0;\r\n        }, 2800);\r\n        return ()=> clearInterval(tidRef.current);\r\n    }, []);\r\n\r\n    return (\r\n        <div css={style({size, width})} ref={divRef}>\r\n            <div className='txt-box'>\r\n                {textList.map((txt, i) => (\r\n                    <div key={i} className='txt'>{txt}</div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = ({size, width}: cssProps)=> (css`\r\n    width: ${width}px;\r\n    font-size: ${size}px;\r\n    overflow: hidden;\r\n    margin: 0 10px 10px 0;\r\n    text-align: center;\r\n    border-bottom: 1px solid var(--color-main);\r\n    .txt-box {\r\n        height: ${size + 12}px;\r\n        transition: .8s;\r\n        .txt {\r\n            height: ${size + 12}px;\r\n            width: ${width}px;\r\n            min-width: ${width}px;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 710px){\r\n        font-size: 23px;\r\n    }\r\n\r\n    @media screen and (max-width: 420px){\r\n        width: 245px;\r\n        font-size: 19px;\r\n        .txt-box {\r\n            .txt {\r\n                min-width: unset;\r\n                width: unset;\r\n            }\r\n        }\r\n    }\r\n`);\r\n\r\nexport default TextSlider;","import React from 'react';\r\n/** @jsxImportSource @emotion/react */\r\nimport {css} from '@emotion/react';\r\nimport {TagBox} from './index';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nfunction CareerBlock({}: Props){\r\n    return (\r\n        <div css={style}>\r\n            <div className='desc'>\r\n                <div>\r\n                    엠로 (2018.01 ~) <a href='http://www.emro.co.kr/' target='blank'>http://www.emro.co.kr</a>\r\n                </div>\r\n                <div>협력사 등록, 견적서작성, 발주생성, 입고/검수 등 구매 시스템을 구축하는 프로젝트들에 참여하였습니다.</div>\r\n                <div>\r\n                    개발에서 배포, 운영까지 담당하였고, 주로 Javascript / CSS / HTML 과\r\n                    <a href='https://library.polymer-project.org/3.0/docs/devguide/feature-overview' target='blank'>PolymerJS</a>\r\n                    라이브러리를\r\n                </div>\r\n                <div>사용하여 Front 개발을 진행하였습니다.</div>\r\n            </div>\r\n            <br/>\r\n            <div>개발 환경</div>\r\n            <div className='tech'>\r\n                <div>\r\n                    <div className='el'>• Client</div>\r\n                    <TagBox text='Javascript'/>\r\n                    <TagBox text='CSS'/>\r\n                    <TagBox text='HTML'/>\r\n                    <TagBox text='PolmyerJS'/>\r\n                </div>\r\n                <div>\r\n                    <div className='el'>• Server</div>\r\n                    <TagBox text='Java'/>\r\n                    <TagBox text='Spring Framework'/>\r\n                    <TagBox text='Oracle RDB'/>\r\n                </div>\r\n                <div>\r\n                    <div className='el'>• DevOps</div>\r\n                    <TagBox text='Jenkins'/>\r\n                    <TagBox text='FTP'/>\r\n                </div>\r\n                <div>\r\n                    <div className='el'>• 협업툴</div>\r\n                    <TagBox text='Jira'/>\r\n                    <TagBox text='Confluence'/>\r\n                    <TagBox text='SVN'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = css`\r\n    color: white;\r\n    font-size: 19px;\r\n    a {\r\n        font-weight: bold;\r\n        margin: 0 5px;\r\n    }\r\n    .desc {\r\n        > div {\r\n            line-height: 33px;\r\n            span {\r\n                font-weight: bold;\r\n            }\r\n        }\r\n    }\r\n    .tech {\r\n        margin-top: 10px;\r\n        > div {\r\n            display: flex;\r\n            align-items: center;\r\n            .el {\r\n                width: 120px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 710px){\r\n        .tech {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            > div {\r\n                .el {\r\n                    display: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default CareerBlock;","import React from 'react';\r\n/** @jsxImportSource @emotion/react */\r\nimport {css} from '@emotion/react';\r\n\r\ninterface Props {\r\n    text: string\r\n}\r\n\r\nfunction TagBox({text}: Props){\r\n    return (\r\n        <div css={style}>\r\n            {text}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = css`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 2px 10px;\r\n    width: fit-content;\r\n    border-radius: var(--radius);\r\n    border: 1px solid var(--color-main);\r\n    font-size: 19px;\r\n    white-space: nowrap;\r\n    color: var(--color-main);\r\n    margin: 5px 15px 5px 0;\r\n    transition: .3s;\r\n    &:hover {\r\n        border: 1px solid #00f5f5;\r\n        color: #00f5f5;\r\n    }\r\n\r\n    @media screen and (max-width: 420px){\r\n        font-size: 14px;\r\n        padding: 2px 5px;\r\n    }\r\n`;\r\n\r\nexport default TagBox;","import React from 'react';\r\n/** @jsxImportSource @emotion/react */\r\nimport {css} from '@emotion/react';\r\nimport {TagBox} from './index';\r\nimport {SiGithub} from 'react-icons/si';\r\nimport {HiOutlineExternalLink} from 'react-icons/hi';\r\n\r\ninterface Props {\r\n    imgUrl: string\r\n    projectName: string\r\n    period: string\r\n    description: string\r\n    techList: string[]\r\n    link: string\r\n    site: string\r\n}\r\n\r\nfunction ProjectBlock({imgUrl, projectName, period, description, techList, link, site}: Props){\r\n\r\n    const onClickLink = (e: React.MouseEvent<SVGElement>)=>{\r\n        const {name} = e.currentTarget.dataset;\r\n        const url = name === 'git' ? link : site;\r\n        window.open(url, '_blank');\r\n    } \r\n\r\n    return (\r\n        <div css={style}>\r\n            <div className='wrapper'>\r\n                <div className='preview'>\r\n                    <img src={imgUrl}></img>\r\n                    <div className='cir1'></div>\r\n                    <div className='cir2'></div>\r\n                    <div className='cir3'></div>\r\n                    <div className='cir4'></div>\r\n                </div>\r\n                <div className='explain'>\r\n                    <div className='tit'>\r\n                        {projectName}\r\n                    </div>\r\n                    {/* <div className='for'>\r\n                        {period}\r\n                    </div> */}\r\n                    <div className='desc'>\r\n                        {description}\r\n                    </div>\r\n                    <div className='tech'>\r\n                        {techList.map(t => (\r\n                            <TagBox key={t} text={t}></TagBox>\r\n                        ))}\r\n                    </div>\r\n                    <div className='link'>\r\n                        <SiGithub size='45' data-name='git' onClick={onClickLink}/>\r\n                        {site ? <HiOutlineExternalLink size='48' data-name='site' onClick={onClickLink}/> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = css`\r\n    padding: 20px 0;\r\n    margin-bottom: 100px;\r\n    .wrapper {\r\n        display: flex;\r\n        transition: 1s;\r\n        .preview {\r\n            position: relative;\r\n            width: 550px;\r\n            min-width: 550px;\r\n            height: 400px;\r\n            padding: 40px;\r\n            overflow: hidden;\r\n            border-radius: var(--radius);\r\n            background-color: #2b8165;\r\n            transition: 1s;\r\n            &:hover {\r\n                .cir1 {\r\n                    transform: scale(1.1);\r\n                }\r\n                .cir2 {\r\n                    transform: scale(1.3);\r\n                }\r\n                .cir3 {\r\n                    transform: scale(2.5);\r\n                }\r\n                .cir4 {\r\n                    transform: scale(2.2);\r\n                }\r\n                img {\r\n                    transform: scale(1.05);\r\n                    box-shadow: 0 0 30px 10px black;\r\n                }\r\n            }\r\n            img {\r\n                z-index: 1;\r\n                position: relative;\r\n                width: 100%;\r\n                height: 100%;\r\n                border-radius: 10px;\r\n                box-shadow: 0 0 30px 5px black;\r\n                transition: .5s;\r\n            }\r\n            [class*='cir'] {\r\n                position: absolute;\r\n                border-radius: 50%;\r\n                transition: .5s;\r\n            }\r\n            .cir1 {\r\n                width: 150px;\r\n                height: 150px;\r\n                top: -50px;\r\n                left: -50px;\r\n                background-color: #bfc5c4;\r\n            }\r\n            .cir2 {\r\n                width: 110px;\r\n                height: 110px;\r\n                top: 300px;\r\n                left: 400px;\r\n                background-color: #8affe4;\r\n            }\r\n            .cir3 {\r\n                width: 100px;\r\n                height: 100px;\r\n                top: 300px;\r\n                left: -10px;\r\n                background-color: #9ed5b2;\r\n            }\r\n            .cir4 {\r\n                width: 70px;\r\n                height: 70px;\r\n                top: 0;\r\n                left: 410px;\r\n                background-color: #80ffad;\r\n            }\r\n        }\r\n        .explain {\r\n            padding-left: 40px;\r\n            flex-grow: 1;\r\n            color: white;\r\n            transition: 1s;\r\n            .tit {\r\n                color: var(--color-main);\r\n                font-size: 37px;\r\n                margin-bottom: 20px;\r\n            }\r\n            .for {\r\n                font-size: 20px;\r\n                margin: 6px 0;\r\n            }\r\n            .desc {\r\n                white-space: pre-line;\r\n                font-size: 18px;\r\n                line-height: 30px;\r\n            }\r\n            .tech {\r\n                display: flex;\r\n                flex-wrap: wrap;\r\n                margin-top: 7px;\r\n            }\r\n            .link {\r\n                margin: 15px 0 0 15px;\r\n                svg {\r\n                    margin-right: 15px;\r\n                    transition: .3s;\r\n                    &:hover {\r\n                        cursor: pointer;\r\n                        transform: scale(1.1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 1400px) {\r\n        .wrapper {\r\n            flex-direction: column;\r\n            align-items: center;\r\n            .explain {\r\n                flex-grow: unset;\r\n                width: 700px;\r\n                padding-left: 80px;\r\n                padding-top: 15px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 710px) {\r\n        .wrapper {\r\n            .preview {\r\n                width: 460px;\r\n                min-width: 460px;\r\n                height: 300px;\r\n            }\r\n            .explain {\r\n                width: 450px;\r\n                padding-left: 0;\r\n                .tech {\r\n                    width: calc(100% - 30px);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 420px){\r\n        .wrapper {\r\n            .preview {\r\n                width: 100%;\r\n                min-width: unset;\r\n                height: 280px;\r\n            }\r\n            .explain {\r\n                width: 100%;\r\n                min-width: unset;\r\n                .tit {\r\n                    font-size: 30px;\r\n                }\r\n                .link {\r\n                    svg {\r\n                        width: 40px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default ProjectBlock;","import React from 'react';\r\n/** @jsxImportSource @emotion/react */\r\nimport {css} from '@emotion/react';\r\nimport {SiTypescript, SiJavascript, SiReact, SiHtml5, SiCss3, SiVisualstudiocode, SiGit} from 'react-icons/si';\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nfunction Skills({}: Props){\r\n    return (\r\n        <div css={style}>\r\n            <div>\r\n                <SiJavascript className='icon1' size='70'/>\r\n                <div className='txt'>Javascript</div>\r\n            </div>\r\n            <div>\r\n                <SiHtml5 className='icon2' size='70'/>\r\n                <div className='txt'>HTML 5</div>\r\n            </div>\r\n            <div>\r\n                <SiCss3 className='icon3' size='70'/>\r\n                <div className='txt'>CSS 3</div>\r\n            </div>\r\n            <div>\r\n                <SiTypescript className='icon4' size='70'/>\r\n                <div className='txt'>Typescript</div>\r\n            </div>\r\n            <div>\r\n                <SiReact className='icon5' size='70'/>\r\n                <div className='txt'>React</div>\r\n            </div>\r\n            <div>\r\n                <SiVisualstudiocode className='icon6' size='70'/>\r\n                <div className='txt'>vscode</div>\r\n            </div>\r\n            <div>\r\n                <SiGit className='icon7' size='70'/>\r\n                <div className='txt'>git</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = css`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    color: white;\r\n    margin-bottom: 100px;\r\n    svg {\r\n        margin: 10px 20px;\r\n        transition: .2s;\r\n        &:hover {\r\n            transform: scale(1.1);\r\n        }\r\n    }\r\n    .txt {\r\n        text-align: center;\r\n    }\r\n    .icon1:hover {color: #f0db4f;};\r\n    .icon2:hover {color: #f16529;};\r\n    .icon3:hover {color: #33a9dc;};\r\n    .icon4:hover {color: #2f74c0;};\r\n    .icon5:hover {color: #61dafb;};\r\n    .icon6:hover {color: #0076c6;};\r\n    .icon7:hover {color: #e84e31;};\r\n\r\n    @media screen and (max-width: 930px) {\r\n        flex-wrap: wrap;\r\n        justify-content: unset;    \r\n    }\r\n    \r\n    @media screen and (max-width: 420px) {\r\n        svg {\r\n            width: 40px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Skills;","import React from 'react';\r\n/** @jsxImportSource @emotion/react */\r\nimport {css} from '@emotion/react';\r\nimport {AiOutlineMail} from 'react-icons/ai';\r\nimport {CgWebsite} from 'react-icons/cg';\r\nimport {FiGithub} from 'react-icons/fi';\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nfunction Contact({}: Props){\r\n    const onClick = (e: React.MouseEvent<HTMLDivElement>)=>{\r\n        const url = e.currentTarget.textContent || '';\r\n        window.open(url, 'blank');\r\n    }\r\n\r\n    return (\r\n        <div css={style}>\r\n            <div className='row'>\r\n                <AiOutlineMail size='35'/>\r\n                <div className='txt'>eyeyel93@gmail.com</div>\r\n            </div>\r\n            <div className='row'>\r\n                <CgWebsite size='35'/>\r\n                <div className='txt link' onClick={onClick}>https://kwangsunny.tistory.com</div>\r\n            </div>\r\n            <div className='row'>\r\n                <FiGithub size='35'/>\r\n                <div className='txt link' onClick={onClick}>https://github.com/kks2139</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = css`\r\n    color: white;\r\n    .row {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-bottom: 15px;\r\n        .txt {\r\n            font-size: 20px;\r\n            margin-left: 20px;\r\n            transition: .3s;\r\n        }\r\n        .link {\r\n            cursor: pointer;\r\n            &:hover {\r\n                color: var(--color-link);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Contact;","const data = {\r\n    projects: [\r\n        {\r\n            imgUrl: 'pj4.PNG',\r\n            projectName: 'Employee Management',\r\n            period: '~ 진행중',\r\n            description: `Apollo 와 GraphQL 를 공부하며 만드는 토이 프로젝트입니다. \r\n            검색 조건에 맞는 직원들의 정보를 가져와 보여주는 \r\n            직원관리 페이지입니다.`,\r\n            techList: ['React','GraphQL','Apollo','Redux','Typescript','ExpressJS','Emotion','SCSS'],\r\n            link: 'https://github.com/kks2139/employee-management',\r\n            site: ''\r\n        },\r\n        {\r\n            imgUrl: 'pj2.PNG',\r\n            projectName: 'Quiz',\r\n            period: '~ 2021.08',\r\n            description: `문제를 맞추고 오답노트를 기록하는 간단한 퀴즈웹앱 입니다.\r\n            퀴즈 공개 api를 이용하여 랜덤주제 5가지의 퀴즈가 출제됩니다.\r\n            퀴즈를 풀고 결과를 차트로 확인할 수 있고 오답노트를 작성하고 \r\n            이력을 남길 수 있습니다.`,\r\n            techList: ['React','Redux','Typescript','Emotion','SCSS','Victory','react-icons'],\r\n            link: 'https://github.com/kks2139/quiz',\r\n            site: 'https://kks2139.github.io/quiz-deploy/'\r\n        },\r\n        {\r\n            imgUrl: 'pj1.PNG',\r\n            projectName: 'Shopping cart',\r\n            period: '~ 2021.07',\r\n            description: `Redux를 공부하면서 만든 토이 프로젝트입니다.\r\n            depth가 깊은 상품 리스트를 조회하고 이를 Redux 로 관리하는 화면을\r\n            만들어보고 싶어서 시작하게 된 개인 프로젝트 입니다.\r\n            선택한 상품의 옵션을 선택한 후 장바구니에 담고 총 금액까지 계산하는 \r\n            상품 주문앱 입니다.`,\r\n            techList: ['React','Redux','Typescript','CSS'],\r\n            link: 'https://github.com/kks2139/shopping-cart',\r\n            site: 'https://kks2139.github.io/deploy-shopping-cart/'\r\n        },\r\n        {\r\n            imgUrl: 'pj3.PNG',\r\n            projectName: 'Responsive style app',\r\n            period: '~ 2021.06',\r\n            description: `W3School 사이트의 메인 화면을 참고하여\r\n            반응형 웹페이지를 구현하였습니다.`,\r\n            techList: ['React','Javascript','CSS'],\r\n            link: 'https://github.com/kks2139/clone-w3s-main',\r\n            site: 'https://kks2139.github.io/responsive-app-refering-w3s/'\r\n        },\r\n        {\r\n            imgUrl: 'pj5.PNG',\r\n            projectName: 'Tetris',\r\n            period: '~ 2021.05',\r\n            description: `React Hooks을 공부하며 만든 토이프로젝트 입니다.\r\n            로그인 시 CSRF 토큰으로 사용자를 인증합니다. \r\n            게임에 입장한 사용자는 조작키와 테마색을 변경할 수 있습니다. \r\n            난이도를 선택하고 테트리스 게임을 즐길 수 있고, \r\n            게임이 끝난후엔 점수가 기록됩니다.\r\n            기록된 점수들은 랭킹목록을 통해 조회할 수 있습니다.`,\r\n            techList: ['React','Javascript','CSS','ExpressJS','AWS RDB','AWS EC2','MySQL','Nginx','FTP'],\r\n            link: 'https://github.com/kks2139/Tetris',\r\n            site: 'http://ec2-3-36-219-54.ap-northeast-2.compute.amazonaws.com/'\r\n        },\r\n    ]\r\n}\r\n\r\nexport default data;","export default __webpack_public_path__ + \"static/media/stary-sky.e74961c7.jpg\";","import React from 'react';\nimport './Common.scss';\n/** @jsxImportSource @emotion/react */\nimport {css} from '@emotion/react';\nimport {TopMenu, Typing, TextSlider, CareerBlock, ProjectBlock, Skills, Contact} from './components/index';\nimport data from './assest/data/data';\nimport sky from './assest/img/stary-sky.jpg';\n\nfunction App() {\n  const feat = [\n      '사용자 입장에서 고민하는',\n      '협업의 시너지를 중요시하는',\n      '부족한 부분을 채워나가는',\n      '꾸준히 성장해 나가는'\n  ];\n\n  return (\n    <div css={style}> \n      <TopMenu></TopMenu>\n      <div className='background'></div>\n      <div className='content'>\n        <div className='about-box' id='About'>\n          <div className='intro-box'>\n            <Typing text='Let me introduce myself !' size={47}></Typing>\n            <div className='im'>\n              <span>Hello!</span>\n              <div><span>I'm </span>Kwangsun Kim.</div>\n              <div className='feat'>\n                <TextSlider textList={feat} size={27} width={350}></TextSlider>\n                <span>개발자 입니다.</span>\n              </div>\n            </div>\n          </div>\n          <div className='rocket-box'>\n            <img className='rk' src='shuttle.png'></img>\n            <img className='st1' src='star.png'></img>\n            <img className='st2' src='star.png'></img>\n            <img className='st3' src='star.png'></img>\n            <img className='st4' src='star.png'></img>\n          </div>\n        </div>\n        <div className='sub-title'>Career</div>\n        <CareerBlock></CareerBlock>\n        <div className='sub-title' id='Projects'>Projects</div>\n        <div className='pjt-wrapper'>\n          {data.projects.map(p => (\n            <ProjectBlock \n            key={p.projectName}\n            imgUrl={p.imgUrl} \n            projectName={p.projectName} \n            period={p.period} \n            description={p.description} \n            techList={p.techList}\n            site={p.site}\n            link={p.link}/>\n          ))}\n          </div>\n        <div className='sub-title'>Skills & Tools</div>\n        <Skills></Skills>\n        <div className='sub-title' id='Contact'>Contact</div>\n        <Contact></Contact>\n        <div className='footer'>\n          Developed by KKS 🧑🏻\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst style = css`\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  > .background {\n    position: absolute;\n    background-image: url(${sky});\n    width: 100%;\n    height: 600px;\n    box-shadow: 0 5px 30px 0 black;\n  }\n  > .content {\n    width: calc(100% - 100px);\n    margin-top: 200px;\n    padding: 0 100px;\n    .about-box {\n      position: relative;\n      display: flex;\n      justify-content: space-between;\n      height: 310px;\n      .im {\n        margin-top: 10px;\n        font-size: 25px;\n        font-weight: bold;\n        color: var(--color-main);\n        span {\n          color: white;\n        }\n        .feat {\n          margin-top: 15px;\n          display: flex;\n        }\n      }\n    }\n    .footer {\n      display: flex;\n      justify-content: center;\n      margin: 270px 0 15px 0;\n      height: 30px;\n      color: white;\n    }\n  }\n  .rocket-box {\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 100px;\n    width: 310px;\n    height: 310px;\n    overflow: hidden;\n    img {\n      position: absolute;\n    }\n    .rk {\n      width: 200px;\n      animation-name: shaking;\n      animation-duration: 5s;\n      animation-timing-function: ease;\n      animation-iteration-count: infinite;\n    }\n    [class*='st'] {\n      width: 35px;\n      animation-duration: 3s;\n      animation-timing-function: linear;\n      animation-iteration-count: infinite;\n      \n    }\n    .st1 {\n      width: 30px;\n      transform: translate(-500px, -500px);\n      animation-name: fall-1;\n      animation-delay: 0s;\n    }\n    .st2 {\n      z-index: 2;\n      transform: translate(-500px, -500px);\n      animation-name: fall-2;\n      animation-delay: 1s;\n    }\n    .st3 {\n      width: 30px;\n      transform: translate(-500px, -500px);\n      animation-name: fall-3;\n      animation-delay: 2s;\n    }\n    .st4 {\n      z-index: 2;\n      transform: translate(-500px, -500px);\n      animation-name: fall-4;\n      animation-delay: 3s;\n    }\n  }\n\n  @keyframes shaking {\n    0% {transform: rotate(-50deg);}\n    50% {transform: rotate(-40deg);}\n    100% {transform: rotate(-50deg);}\n  }\n  @keyframes fall-1 {\n    0% {transform: translate(-30px, -200px);}\n    100% {transform: translate(-200px, 200px);}\n  }\n  @keyframes fall-2 {\n    0% {transform: translate(100px, -200px);}\n    100% {transform: translate(-140px, 200px);}\n  }\n  @keyframes fall-3 {\n    0% {transform: translate(140px, -200px);}\n    100% {transform: translate(-50px, 200px);}\n  }\n  @keyframes fall-4 {\n    0% {transform: translate(220px, -200px);}\n    100% {transform: translate(0px, 200px);}\n  }\n\n  @media screen and (max-width: 1300px) {\n    .content {\n      .about-box {\n        .rocket-box {\n          position: fixed;\n          top: -116px;\n          left: 40px;\n          transform: scale(0.16);\n          z-index: 101;\n        }\n      }\n    }\n  }\n\n  @media screen and (max-width: 900px){\n    .content {\n      padding: 0;\n    }\n  }\n\n  @media screen and (max-width: 710px){\n    .intro-box {\n      .im {\n        font-size: 23px !important;\n        .feat {\n          flex-direction: column;\n        }\n      }\n    }\n  }\n\n  @media screen and (max-width: 420px){\n    .content {\n      width: 100%;\n      padding: 0 20px;\n      .im {\n        font-size: 20px !important;\n      }\n      .about-box {\n        .rocket-box {\n          left: 0;\n        }\n      }\n      .sub-title {\n        font-size: 32px;\n      }\n    }\n  }\n\n`;\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}